module arqui #(parameter WIDTH = 36, parameter REGNUM = 16, 
				parameter ADDRESSWIDTH = 4, parameter OPCODEWIDTH = 4,
				parameter INSTRUCTIONWIDTH = 24)
	(input logic clock, reset, startIO, 
	output logic outFlagIOE,
	output logic [WIDTH-1:0] out,
	
	output logic writeEnableDD, writeDataEnableMD, resultSelectorWBD, data2SelectorED, takeBranchE, outFlagIOD,
	
	output logic [2:0] aluControlED,
	
	output logic NE2, ZE2, VE2, CE2,
	
	output logic [OPCODEWIDTH-1:0] opcodeD, opcodeE,
	
	output logic [1:0] data1ForwardSelectorE, data2ForwardSelectorE,
	
	output logic stallF, stallD, flushE, flushD,
	
	output logic [WIDTH-1:0] NewPCF, PCF, PCPlus1F,
	
	output logic [WIDTH-1:0] MemoryDataAddress, MemoryDataToWrite, MemoryDataOutputM, MemoryDataOutputWB,
	
	output logic [INSTRUCTIONWIDTH-1:0] InstructionF, InstructionD,
	
	output logic writeEnableDE, writeDataEnableME, resultSelectorWBE, data2SelectorEE,
	
	output logic [2:0] aluControlEE,
	
	output logic [ADDRESSWIDTH-1:0] writeAddressD, regDestinationAddressD, regDestinationAddressE,reg1AddressD, reg2AddressD, reg1AddressE, reg2AddressE,
	
	output logic [WIDTH-1:0] reg2FinalE,
	
	output logic [WIDTH-1:0] inmmediateD, inmmediateE, dataToSaveD,
	
	output logic [WIDTH-1:0] reg1ContentD, reg2ContentD, reg1ContentE, reg2ContentE,
	
	output logic writeEnableDM, writeDataEnableMM, resultSelectorWBM,	outFlagIOM,
	
	output logic NE1, ZE1, VE1, CE1,
	
	output logic [WIDTH-1:0] aluOutputE, aluOutputM,
	
	output logic [WIDTH-1:0] reg2ContentM, forwardM, forwardWB,
	
	output logic [ADDRESSWIDTH-1:0] regDestinationAddressM,
	
	output logic writeEnableDWB, resultSelectorWBWB, data2SelectorEWB,
	
	output logic [2:0] aluControlEWB,
	
	output logic [WIDTH-1:0] aluOutputWB,
	
	output logic [ADDRESSWIDTH-1:0] regDestinationAddressWB,
	
	output logic [WIDTH-1:0] outputWB);
	
	
	// Controller
	controller 
	
